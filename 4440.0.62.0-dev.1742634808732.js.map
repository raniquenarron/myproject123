{"version":3,"file":"4440.0.62.0-dev.1742634808732.js","mappings":"qRAAA,41B","sources":["webpack:///../../libs/remix-ws-templates/src/templates/stealthdropNoir/src/main.nr"],"sourcesContent":["export default \"use dep::std;\\nuse dep::ecrecover;\\n\\nglobal DEPTH = 12;\\n\\nfn main(\\n  pub_key: [u8; 64],\\n  signature: [u8; 64],\\n  hashed_message: pub [u8; 32],\\n  nullifier: pub Field,\\n  merkle_path: [Field; DEPTH],\\n  index: Field,\\n  merkle_root: pub Field,\\n  claimer_priv: Field,\\n  claimer_pub: pub Field\\n) {\\n    let key = ecrecover::secp256k1::PubKey::from_unified(pub_key);\\n    let address = ecrecover::ecrecover(key.pub_x, key.pub_y, signature, hashed_message);\\n\\n    let signature_as_fields = signature.map(|x : u8| x as Field);\\n    let calculatedNullifier = std::hash::pedersen(signature_as_fields);\\n    assert(calculatedNullifier[0] == nullifier);\\n\\n    let new_root = std::merkle::compute_merkle_root(address, index, merkle_path);\\n    assert(new_root == merkle_root);\\n  \\n    assert(claimer_priv == claimer_pub);\\n}\";"],"names":[],"sourceRoot":""}